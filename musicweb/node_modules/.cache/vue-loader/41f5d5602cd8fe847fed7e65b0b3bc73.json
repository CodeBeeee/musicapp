{"remainingRequest":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\src\\components\\admin\\StudentInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\src\\components\\admin\\StudentInfo.vue","mtime":1583511632708},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {findUserInfo,getUserCount,getUserSearch,delUser,updateUser,getPartStudent,delStudent} from '../../api/index';\r\nimport { log } from 'util';\r\nexport default {\r\n    name:\"userinfo\",\r\n    data(){\r\n        var checkPhone = (rule, value, callback) => {\r\n            const phoneReg = /^1[3|4|5|7|8][0-9]{9}$/\r\n            if (!value) {\r\n            return callback(new Error('电话号码不能为空'))\r\n            }\r\n            setTimeout(() => {\r\n            // Number.isInteger是es6验证数字是否为整数的方法,但是我实际用的时候输入的数字总是识别成字符串\r\n            // 所以我就在前面加了一个+实现隐式转换\r\n\r\n            if (!Number.isInteger(+value)) {\r\n                callback(new Error('请输入数字值'))\r\n            } else {\r\n                if (phoneReg.test(value)) {\r\n                callback()\r\n                } else {\r\n                callback(new Error('电话号码格式不正确'))\r\n                }\r\n            }\r\n            }, 100)\r\n        }\r\n        var checkEmail = (rule, value, callback) => {\r\n            const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/\r\n            if (!value) {\r\n            return callback(new Error('邮箱不能为空'))\r\n            }\r\n            setTimeout(() => {\r\n            if (mailReg.test(value)) {\r\n                callback()\r\n            } else {\r\n                callback(new Error('请输入正确的邮箱格式'))\r\n            }\r\n            }, 100)\r\n        }\r\n        return{\r\n            formdata:{\r\n               stpage:'',\r\n               pagesize:''     \r\n            },\r\n            searchform:{\r\n               search:'',\r\n               searchvalue:''     \r\n            },\r\n            editdata:{\r\n                uid:'',\r\n                stuloginuid:'',\r\n                stuname:'',\r\n                stuphone:'',\r\n                stuteach:''\r\n            },\r\n            delform:{id:''},\r\n            searchinput: '',\r\n            select: '',\r\n            size:10,\r\n            currentSize:0,\r\n            total:0,\r\n            tableData:[],\r\n            loading:false,\r\n            dialogFormVisible:false,\r\n            rowData:[],\r\n            formLabelWidth: '130px',\r\n            rules: {\r\n                stuname: [{ required: true, message: '请输入学生姓名，不能为空', trigger: 'blur' }],\r\n                stuloginuid: [{ required: true, message: '请输入学生学号，不能为空', trigger: 'blur' }],\r\n                stuphone: [{ validator: checkPhone, trigger: 'blur' }],\r\n                stuteach: [{ required: true, message: '请输入学生专业，不能为空', trigger: 'blur' }],\r\n            },\r\n        }   \r\n    },\r\n    methods:{\r\n        handleSizeChange(val) {\r\n            this.size = val;\r\n            this.findMsg();\r\n            console.log(`每页 ${val} 条`);\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentSize = val;\r\n            this.findMsg();\r\n            console.log(`当前页: ${val}`);\r\n        },\r\n        getUserCount(){\r\n            getUserCount().then(res=>{\r\n                  \r\n                this.total = res;\r\n            })\r\n        },\r\n        findMsg(){\r\n            this.loading=true;\r\n            this.formdata.pagesize = this.size;\r\n            this.formdata.stpage = (this.currentSize<=1?0:this.currentSize-1)*this.formdata.pagesize;\r\n            getPartStudent(this.formdata).then(res=>{\r\n                this.tableData = res.data;\r\n                this.loading=false;\r\n            }).catch(err => {\r\n                this.$message.error(res);\r\n                this.loading=false;\r\n            })\r\n        },\r\n        userSearch(){\r\n            this.loading=true;\r\n            this.searchform.searchvalue = this.searchinput;\r\n            getUserSearch(this.searchform).then(res=>{\r\n                this.tableData = res.data;\r\n                this.total = this.tableData.length;\r\n                this.loading=false;\r\n            }).catch(err => {\r\n                this.$message.error('服务器出错');\r\n                this.loading=false;\r\n            })\r\n        },\r\n        handleClick(val){\r\n            this.dialogFormVisible = true;\r\n            this.editdata = val;\r\n        },\r\n        deleteClick(uid,index){\r\n            this.$confirm('您确认删除该学生信息了吗?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            }).then(() => {\r\n                this.loading=true;\r\n                this.dialogFormVisible = false;\r\n                \r\n                     this.loading=true;\r\n                    this.delform.id = uid;\r\n                    delStudent(this.delform).then(res=>{\r\n                        if(res==1){\r\n                            this.tableData.splice(index,1);//删除掉tableData数组上的第index个元素\r\n                            this.loading=false;\r\n                            this.$message.success(\"删除成功\");\r\n                        }else{\r\n                            this.loading=false;\r\n                            this.$message.error(\"服务器繁忙,删除失败\");\r\n                        }\r\n                    \r\n                    }).catch(err => {\r\n                        this.$message.error('服务器出错');\r\n                        this.loading=false;\r\n                    })\r\n                 }).catch(() => {\r\n                    this.dialogFormVisible = false;\r\n                    this.loading=false;\r\n                     \r\n                });\r\n        },\r\n        updateData() {\r\n            this.$confirm('您确认修改信息了吗?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            }).then(() => {\r\n                \r\n                this.loading=true;\r\n                this.dialogFormVisible = false;\r\n                this.$refs.edit.validate(valid => {\r\n                    if(valid){\r\n                    updateUser(this.editdata).then(res=>{\r\n                        if(res==1){\r\n                            this.loading=false;\r\n                            this.getUserCount();\r\n                            this.findMsg();\r\n                            this.$message.success(\"修改成功\");\r\n                        }else{\r\n                            this.loading=false;\r\n                            this.$message.success(\"服务器繁忙\");\r\n                        }}).catch(() => {\r\n                            this.dialogFormVisible = false;\r\n                            this.loading=false;\r\n                            this.$message.success(\"服务器出错\");\r\n                    });\r\n                \r\n           \r\n                    }else{\r\n                          this.loading=false;\r\n                          this.findMsg();\r\n                          this.$message.error('请正确填写信息');\r\n                          return false;\r\n                    }\r\n\r\n                })\r\n                 }).catch(() => {\r\n                    this.dialogFormVisible = false;\r\n                    this.loading=false;\r\n                    this.$message.success(\"服务器出错\");\r\n                });\r\n                \r\n          }\r\n    },\r\n        \r\n    created(){\r\n        this.findMsg();\r\n    },\r\n    watch:{\r\n        select(val,oldvalue){\r\n            this.searchform.search = val;\r\n        },\r\n        $route(to,from){\r\n            if(to.path=='/usersinfo'){\r\n                 this.findMsg(); \r\n            }\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["StudentInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StudentInfo.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n                <el-header>\r\n                    <!-- 通过 slot 来指定在 input 中前置或者后置内容。 -->\r\n                    <el-input placeholder=\"请输入内容\" v-model=\"searchinput\" class=\"input-with-select\" style=\"margin-top:30px;height:20px\" >\r\n                         <el-select v-model=\"select\" slot=\"prepend\" placeholder=\"请选择\">\r\n                            <el-option label=\"账号\" value=\"username\"></el-option>\r\n                            <el-option label=\"手机号码\" value=\"phonenum\"></el-option>\r\n                        </el-select>\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"userSearch()\" ></el-button>\r\n                    </el-input>\r\n                </el-header>\r\n                <el-main>\r\n                    <el-table\r\n                        v-loading=\"loading\"\r\n                        :data=\"tableData\"\r\n                        border\r\n                        style=\"width: 100%\">\r\n                        <el-table-column\r\n                            fixed\r\n                            prop=\"uid\"\r\n                            label=\"学生编号\"\r\n                            width=\"200\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"stuloginuid\"\r\n                                label=\"学生学号\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"stuname\"\r\n                                label=\"学生姓名\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                         \r\n                        <el-table-column\r\n                                prop=\"stuphone\"\r\n                                label=\"学生手机号码\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"stuteach\"\r\n                                label=\"学生专业\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                fixed=\"right\"\r\n                                label=\"操作\"\r\n                                width=\"200\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button @click=\"handleClick(scope.row)\" type=\"text\" size=\"small\">编辑</el-button>\r\n                            <el-button @click=\"deleteClick(scope.row.uid,scope.$index)\" type=\"text\" size=\"small\">删除</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <!-- 分页代码 -->\r\n                <div class=\"block\">\r\n                    <el-pagination\r\n                        @size-change=\"handleSizeChange\"\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"currentSize\"\r\n                        :page-sizes=\"[10, 15, 20, 25]\"\r\n                        :page-size=\"size\"\r\n                        layout=\"total, sizes, prev, pager, next, jumper\"\r\n                        :total=\"total\">\r\n                    </el-pagination>\r\n                    \r\n                </div>\r\n                <!-- 个人信息编辑弹出框 -->\r\n                <el-dialog title=\"个人信息\" :visible.sync=\"dialogFormVisible\"  >\r\n                    <el-form :model=\"editdata\" :rules=\"rules\" ref=\"edit\">\r\n                        <el-form-item prop=\"username\" label=\"学生学号\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuloginuid\"   style=\"width:60%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item prop=\"usernick\" label=\"学生姓名\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuname\"   style=\"width:60%;\" ></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item prop=\"email\" label=\"学生手机号码\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuphone\"   style=\"width:60%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item prop=\"phonenum\" label=\"学生专业\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuteach\"   style=\"width:60%;\"></el-input>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                    <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                            <el-button type=\"primary\" @click=\"updateData()\">修 改</el-button>\r\n                    </div>\r\n                </el-dialog>\r\n                </el-main>\r\n        </el-container>\r\n        \r\n    </div>\r\n</template>\r\n<style>\r\n.input-with-select{\r\n    width: 500px;\r\n    height: 33px;\r\n}\r\n.el-select .el-input {\r\n    width: 100px;\r\n    height: 30px;\r\n}\r\n.input-with-select .el-input-group__prepend {\r\n    background-color: #fff;\r\n}\r\n</style>\r\n<script>\r\nimport {findUserInfo,getUserCount,getUserSearch,delUser,updateUser,getPartStudent,delStudent} from '../../api/index';\r\nimport { log } from 'util';\r\nexport default {\r\n    name:\"userinfo\",\r\n    data(){\r\n        var checkPhone = (rule, value, callback) => {\r\n            const phoneReg = /^1[3|4|5|7|8][0-9]{9}$/\r\n            if (!value) {\r\n            return callback(new Error('电话号码不能为空'))\r\n            }\r\n            setTimeout(() => {\r\n            // Number.isInteger是es6验证数字是否为整数的方法,但是我实际用的时候输入的数字总是识别成字符串\r\n            // 所以我就在前面加了一个+实现隐式转换\r\n\r\n            if (!Number.isInteger(+value)) {\r\n                callback(new Error('请输入数字值'))\r\n            } else {\r\n                if (phoneReg.test(value)) {\r\n                callback()\r\n                } else {\r\n                callback(new Error('电话号码格式不正确'))\r\n                }\r\n            }\r\n            }, 100)\r\n        }\r\n        var checkEmail = (rule, value, callback) => {\r\n            const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/\r\n            if (!value) {\r\n            return callback(new Error('邮箱不能为空'))\r\n            }\r\n            setTimeout(() => {\r\n            if (mailReg.test(value)) {\r\n                callback()\r\n            } else {\r\n                callback(new Error('请输入正确的邮箱格式'))\r\n            }\r\n            }, 100)\r\n        }\r\n        return{\r\n            formdata:{\r\n               stpage:'',\r\n               pagesize:''     \r\n            },\r\n            searchform:{\r\n               search:'',\r\n               searchvalue:''     \r\n            },\r\n            editdata:{\r\n                uid:'',\r\n                stuloginuid:'',\r\n                stuname:'',\r\n                stuphone:'',\r\n                stuteach:''\r\n            },\r\n            delform:{id:''},\r\n            searchinput: '',\r\n            select: '',\r\n            size:10,\r\n            currentSize:0,\r\n            total:0,\r\n            tableData:[],\r\n            loading:false,\r\n            dialogFormVisible:false,\r\n            rowData:[],\r\n            formLabelWidth: '130px',\r\n            rules: {\r\n                stuname: [{ required: true, message: '请输入学生姓名，不能为空', trigger: 'blur' }],\r\n                stuloginuid: [{ required: true, message: '请输入学生学号，不能为空', trigger: 'blur' }],\r\n                stuphone: [{ validator: checkPhone, trigger: 'blur' }],\r\n                stuteach: [{ required: true, message: '请输入学生专业，不能为空', trigger: 'blur' }],\r\n            },\r\n        }   \r\n    },\r\n    methods:{\r\n        handleSizeChange(val) {\r\n            this.size = val;\r\n            this.findMsg();\r\n            console.log(`每页 ${val} 条`);\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentSize = val;\r\n            this.findMsg();\r\n            console.log(`当前页: ${val}`);\r\n        },\r\n        getUserCount(){\r\n            getUserCount().then(res=>{\r\n                  \r\n                this.total = res;\r\n            })\r\n        },\r\n        findMsg(){\r\n            this.loading=true;\r\n            this.formdata.pagesize = this.size;\r\n            this.formdata.stpage = (this.currentSize<=1?0:this.currentSize-1)*this.formdata.pagesize;\r\n            getPartStudent(this.formdata).then(res=>{\r\n                this.tableData = res.data;\r\n                this.loading=false;\r\n            }).catch(err => {\r\n                this.$message.error(res);\r\n                this.loading=false;\r\n            })\r\n        },\r\n        userSearch(){\r\n            this.loading=true;\r\n            this.searchform.searchvalue = this.searchinput;\r\n            getUserSearch(this.searchform).then(res=>{\r\n                this.tableData = res.data;\r\n                this.total = this.tableData.length;\r\n                this.loading=false;\r\n            }).catch(err => {\r\n                this.$message.error('服务器出错');\r\n                this.loading=false;\r\n            })\r\n        },\r\n        handleClick(val){\r\n            this.dialogFormVisible = true;\r\n            this.editdata = val;\r\n        },\r\n        deleteClick(uid,index){\r\n            this.$confirm('您确认删除该学生信息了吗?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            }).then(() => {\r\n                this.loading=true;\r\n                this.dialogFormVisible = false;\r\n                \r\n                     this.loading=true;\r\n                    this.delform.id = uid;\r\n                    delStudent(this.delform).then(res=>{\r\n                        if(res==1){\r\n                            this.tableData.splice(index,1);//删除掉tableData数组上的第index个元素\r\n                            this.loading=false;\r\n                            this.$message.success(\"删除成功\");\r\n                        }else{\r\n                            this.loading=false;\r\n                            this.$message.error(\"服务器繁忙,删除失败\");\r\n                        }\r\n                    \r\n                    }).catch(err => {\r\n                        this.$message.error('服务器出错');\r\n                        this.loading=false;\r\n                    })\r\n                 }).catch(() => {\r\n                    this.dialogFormVisible = false;\r\n                    this.loading=false;\r\n                     \r\n                });\r\n        },\r\n        updateData() {\r\n            this.$confirm('您确认修改信息了吗?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            }).then(() => {\r\n                \r\n                this.loading=true;\r\n                this.dialogFormVisible = false;\r\n                this.$refs.edit.validate(valid => {\r\n                    if(valid){\r\n                    updateUser(this.editdata).then(res=>{\r\n                        if(res==1){\r\n                            this.loading=false;\r\n                            this.getUserCount();\r\n                            this.findMsg();\r\n                            this.$message.success(\"修改成功\");\r\n                        }else{\r\n                            this.loading=false;\r\n                            this.$message.success(\"服务器繁忙\");\r\n                        }}).catch(() => {\r\n                            this.dialogFormVisible = false;\r\n                            this.loading=false;\r\n                            this.$message.success(\"服务器出错\");\r\n                    });\r\n                \r\n           \r\n                    }else{\r\n                          this.loading=false;\r\n                          this.findMsg();\r\n                          this.$message.error('请正确填写信息');\r\n                          return false;\r\n                    }\r\n\r\n                })\r\n                 }).catch(() => {\r\n                    this.dialogFormVisible = false;\r\n                    this.loading=false;\r\n                    this.$message.success(\"服务器出错\");\r\n                });\r\n                \r\n          }\r\n    },\r\n        \r\n    created(){\r\n        this.findMsg();\r\n    },\r\n    watch:{\r\n        select(val,oldvalue){\r\n            this.searchform.search = val;\r\n        },\r\n        $route(to,from){\r\n            if(to.path=='/usersinfo'){\r\n                 this.findMsg(); \r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"]}]}