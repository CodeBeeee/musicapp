{"remainingRequest":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\src\\components\\admin\\StudentInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\src\\components\\admin\\StudentInfo.vue","mtime":1583511632708},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WE\\Desktop\\毕业设计\\musicweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-integer\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { findUserInfo, getUserCount as _getUserCount, getUserSearch, delUser, updateUser, getPartStudent, delStudent } from \"../../api/index\";\nimport { log } from 'util';\nexport default {\n  name: \"userinfo\",\n  data: function data() {\n    var checkPhone = function checkPhone(rule, value, callback) {\n      var phoneReg = /^1[3|4|5|7|8][0-9]{9}$/;\n\n      if (!value) {\n        return callback(new Error('电话号码不能为空'));\n      }\n\n      setTimeout(function () {\n        // Number.isInteger是es6验证数字是否为整数的方法,但是我实际用的时候输入的数字总是识别成字符串\n        // 所以我就在前面加了一个+实现隐式转换\n        if (!Number.isInteger(+value)) {\n          callback(new Error('请输入数字值'));\n        } else {\n          if (phoneReg.test(value)) {\n            callback();\n          } else {\n            callback(new Error('电话号码格式不正确'));\n          }\n        }\n      }, 100);\n    };\n\n    var checkEmail = function checkEmail(rule, value, callback) {\n      var mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;\n\n      if (!value) {\n        return callback(new Error('邮箱不能为空'));\n      }\n\n      setTimeout(function () {\n        if (mailReg.test(value)) {\n          callback();\n        } else {\n          callback(new Error('请输入正确的邮箱格式'));\n        }\n      }, 100);\n    };\n\n    return {\n      formdata: {\n        stpage: '',\n        pagesize: ''\n      },\n      searchform: {\n        search: '',\n        searchvalue: ''\n      },\n      editdata: {\n        uid: '',\n        stuloginuid: '',\n        stuname: '',\n        stuphone: '',\n        stuteach: ''\n      },\n      delform: {\n        id: ''\n      },\n      searchinput: '',\n      select: '',\n      size: 10,\n      currentSize: 0,\n      total: 0,\n      tableData: [],\n      loading: false,\n      dialogFormVisible: false,\n      rowData: [],\n      formLabelWidth: '130px',\n      rules: {\n        stuname: [{\n          required: true,\n          message: '请输入学生姓名，不能为空',\n          trigger: 'blur'\n        }],\n        stuloginuid: [{\n          required: true,\n          message: '请输入学生学号，不能为空',\n          trigger: 'blur'\n        }],\n        stuphone: [{\n          validator: checkPhone,\n          trigger: 'blur'\n        }],\n        stuteach: [{\n          required: true,\n          message: '请输入学生专业，不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleSizeChange: function handleSizeChange(val) {\n      this.size = val;\n      this.findMsg();\n      console.log(\"\\u6BCF\\u9875 \".concat(val, \" \\u6761\"));\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentSize = val;\n      this.findMsg();\n      console.log(\"\\u5F53\\u524D\\u9875: \".concat(val));\n    },\n    getUserCount: function getUserCount() {\n      var _this = this;\n\n      _getUserCount().then(function (res) {\n        _this.total = res;\n      });\n    },\n    findMsg: function findMsg() {\n      var _this2 = this;\n\n      this.loading = true;\n      this.formdata.pagesize = this.size;\n      this.formdata.stpage = (this.currentSize <= 1 ? 0 : this.currentSize - 1) * this.formdata.pagesize;\n      getPartStudent(this.formdata).then(function (res) {\n        _this2.tableData = res.data;\n        _this2.loading = false;\n      }).catch(function (err) {\n        _this2.$message.error(res);\n\n        _this2.loading = false;\n      });\n    },\n    userSearch: function userSearch() {\n      var _this3 = this;\n\n      this.loading = true;\n      this.searchform.searchvalue = this.searchinput;\n      getUserSearch(this.searchform).then(function (res) {\n        _this3.tableData = res.data;\n        _this3.total = _this3.tableData.length;\n        _this3.loading = false;\n      }).catch(function (err) {\n        _this3.$message.error('服务器出错');\n\n        _this3.loading = false;\n      });\n    },\n    handleClick: function handleClick(val) {\n      this.dialogFormVisible = true;\n      this.editdata = val;\n    },\n    deleteClick: function deleteClick(uid, index) {\n      var _this4 = this;\n\n      this.$confirm('您确认删除该学生信息了吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this4.loading = true;\n        _this4.dialogFormVisible = false;\n        _this4.loading = true;\n        _this4.delform.id = uid;\n        delStudent(_this4.delform).then(function (res) {\n          if (res == 1) {\n            _this4.tableData.splice(index, 1); //删除掉tableData数组上的第index个元素\n\n\n            _this4.loading = false;\n\n            _this4.$message.success(\"删除成功\");\n          } else {\n            _this4.loading = false;\n\n            _this4.$message.error(\"服务器繁忙,删除失败\");\n          }\n        }).catch(function (err) {\n          _this4.$message.error('服务器出错');\n\n          _this4.loading = false;\n        });\n      }).catch(function () {\n        _this4.dialogFormVisible = false;\n        _this4.loading = false;\n      });\n    },\n    updateData: function updateData() {\n      var _this5 = this;\n\n      this.$confirm('您确认修改信息了吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this5.loading = true;\n        _this5.dialogFormVisible = false;\n\n        _this5.$refs.edit.validate(function (valid) {\n          if (valid) {\n            updateUser(_this5.editdata).then(function (res) {\n              if (res == 1) {\n                _this5.loading = false;\n\n                _this5.getUserCount();\n\n                _this5.findMsg();\n\n                _this5.$message.success(\"修改成功\");\n              } else {\n                _this5.loading = false;\n\n                _this5.$message.success(\"服务器繁忙\");\n              }\n            }).catch(function () {\n              _this5.dialogFormVisible = false;\n              _this5.loading = false;\n\n              _this5.$message.success(\"服务器出错\");\n            });\n          } else {\n            _this5.loading = false;\n\n            _this5.findMsg();\n\n            _this5.$message.error('请正确填写信息');\n\n            return false;\n          }\n        });\n      }).catch(function () {\n        _this5.dialogFormVisible = false;\n        _this5.loading = false;\n\n        _this5.$message.success(\"服务器出错\");\n      });\n    }\n  },\n  created: function created() {\n    this.findMsg();\n  },\n  watch: {\n    select: function select(val, oldvalue) {\n      this.searchform.search = val;\n    },\n    $route: function $route(to, from) {\n      if (to.path == '/usersinfo') {\n        this.findMsg();\n      }\n    }\n  }\n};",{"version":3,"sources":["StudentInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n                <el-header>\r\n                    <!-- 通过 slot 来指定在 input 中前置或者后置内容。 -->\r\n                    <el-input placeholder=\"请输入内容\" v-model=\"searchinput\" class=\"input-with-select\" style=\"margin-top:30px;height:20px\" >\r\n                         <el-select v-model=\"select\" slot=\"prepend\" placeholder=\"请选择\">\r\n                            <el-option label=\"账号\" value=\"username\"></el-option>\r\n                            <el-option label=\"手机号码\" value=\"phonenum\"></el-option>\r\n                        </el-select>\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"userSearch()\" ></el-button>\r\n                    </el-input>\r\n                </el-header>\r\n                <el-main>\r\n                    <el-table\r\n                        v-loading=\"loading\"\r\n                        :data=\"tableData\"\r\n                        border\r\n                        style=\"width: 100%\">\r\n                        <el-table-column\r\n                            fixed\r\n                            prop=\"uid\"\r\n                            label=\"学生编号\"\r\n                            width=\"200\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"stuloginuid\"\r\n                                label=\"学生学号\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"stuname\"\r\n                                label=\"学生姓名\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                         \r\n                        <el-table-column\r\n                                prop=\"stuphone\"\r\n                                label=\"学生手机号码\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"stuteach\"\r\n                                label=\"学生专业\"\r\n                                width=\"auto\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                fixed=\"right\"\r\n                                label=\"操作\"\r\n                                width=\"200\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button @click=\"handleClick(scope.row)\" type=\"text\" size=\"small\">编辑</el-button>\r\n                            <el-button @click=\"deleteClick(scope.row.uid,scope.$index)\" type=\"text\" size=\"small\">删除</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <!-- 分页代码 -->\r\n                <div class=\"block\">\r\n                    <el-pagination\r\n                        @size-change=\"handleSizeChange\"\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"currentSize\"\r\n                        :page-sizes=\"[10, 15, 20, 25]\"\r\n                        :page-size=\"size\"\r\n                        layout=\"total, sizes, prev, pager, next, jumper\"\r\n                        :total=\"total\">\r\n                    </el-pagination>\r\n                    \r\n                </div>\r\n                <!-- 个人信息编辑弹出框 -->\r\n                <el-dialog title=\"个人信息\" :visible.sync=\"dialogFormVisible\"  >\r\n                    <el-form :model=\"editdata\" :rules=\"rules\" ref=\"edit\">\r\n                        <el-form-item prop=\"username\" label=\"学生学号\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuloginuid\"   style=\"width:60%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item prop=\"usernick\" label=\"学生姓名\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuname\"   style=\"width:60%;\" ></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item prop=\"email\" label=\"学生手机号码\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuphone\"   style=\"width:60%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item prop=\"phonenum\" label=\"学生专业\" :label-width=\"formLabelWidth\" style=\"margin-left:15%\">\r\n                            <el-input v-model=\"editdata.stuteach\"   style=\"width:60%;\"></el-input>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                    <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                            <el-button type=\"primary\" @click=\"updateData()\">修 改</el-button>\r\n                    </div>\r\n                </el-dialog>\r\n                </el-main>\r\n        </el-container>\r\n        \r\n    </div>\r\n</template>\r\n<style>\r\n.input-with-select{\r\n    width: 500px;\r\n    height: 33px;\r\n}\r\n.el-select .el-input {\r\n    width: 100px;\r\n    height: 30px;\r\n}\r\n.input-with-select .el-input-group__prepend {\r\n    background-color: #fff;\r\n}\r\n</style>\r\n<script>\r\nimport {findUserInfo,getUserCount,getUserSearch,delUser,updateUser,getPartStudent,delStudent} from '../../api/index';\r\nimport { log } from 'util';\r\nexport default {\r\n    name:\"userinfo\",\r\n    data(){\r\n        var checkPhone = (rule, value, callback) => {\r\n            const phoneReg = /^1[3|4|5|7|8][0-9]{9}$/\r\n            if (!value) {\r\n            return callback(new Error('电话号码不能为空'))\r\n            }\r\n            setTimeout(() => {\r\n            // Number.isInteger是es6验证数字是否为整数的方法,但是我实际用的时候输入的数字总是识别成字符串\r\n            // 所以我就在前面加了一个+实现隐式转换\r\n\r\n            if (!Number.isInteger(+value)) {\r\n                callback(new Error('请输入数字值'))\r\n            } else {\r\n                if (phoneReg.test(value)) {\r\n                callback()\r\n                } else {\r\n                callback(new Error('电话号码格式不正确'))\r\n                }\r\n            }\r\n            }, 100)\r\n        }\r\n        var checkEmail = (rule, value, callback) => {\r\n            const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/\r\n            if (!value) {\r\n            return callback(new Error('邮箱不能为空'))\r\n            }\r\n            setTimeout(() => {\r\n            if (mailReg.test(value)) {\r\n                callback()\r\n            } else {\r\n                callback(new Error('请输入正确的邮箱格式'))\r\n            }\r\n            }, 100)\r\n        }\r\n        return{\r\n            formdata:{\r\n               stpage:'',\r\n               pagesize:''     \r\n            },\r\n            searchform:{\r\n               search:'',\r\n               searchvalue:''     \r\n            },\r\n            editdata:{\r\n                uid:'',\r\n                stuloginuid:'',\r\n                stuname:'',\r\n                stuphone:'',\r\n                stuteach:''\r\n            },\r\n            delform:{id:''},\r\n            searchinput: '',\r\n            select: '',\r\n            size:10,\r\n            currentSize:0,\r\n            total:0,\r\n            tableData:[],\r\n            loading:false,\r\n            dialogFormVisible:false,\r\n            rowData:[],\r\n            formLabelWidth: '130px',\r\n            rules: {\r\n                stuname: [{ required: true, message: '请输入学生姓名，不能为空', trigger: 'blur' }],\r\n                stuloginuid: [{ required: true, message: '请输入学生学号，不能为空', trigger: 'blur' }],\r\n                stuphone: [{ validator: checkPhone, trigger: 'blur' }],\r\n                stuteach: [{ required: true, message: '请输入学生专业，不能为空', trigger: 'blur' }],\r\n            },\r\n        }   \r\n    },\r\n    methods:{\r\n        handleSizeChange(val) {\r\n            this.size = val;\r\n            this.findMsg();\r\n            console.log(`每页 ${val} 条`);\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentSize = val;\r\n            this.findMsg();\r\n            console.log(`当前页: ${val}`);\r\n        },\r\n        getUserCount(){\r\n            getUserCount().then(res=>{\r\n                  \r\n                this.total = res;\r\n            })\r\n        },\r\n        findMsg(){\r\n            this.loading=true;\r\n            this.formdata.pagesize = this.size;\r\n            this.formdata.stpage = (this.currentSize<=1?0:this.currentSize-1)*this.formdata.pagesize;\r\n            getPartStudent(this.formdata).then(res=>{\r\n                this.tableData = res.data;\r\n                this.loading=false;\r\n            }).catch(err => {\r\n                this.$message.error(res);\r\n                this.loading=false;\r\n            })\r\n        },\r\n        userSearch(){\r\n            this.loading=true;\r\n            this.searchform.searchvalue = this.searchinput;\r\n            getUserSearch(this.searchform).then(res=>{\r\n                this.tableData = res.data;\r\n                this.total = this.tableData.length;\r\n                this.loading=false;\r\n            }).catch(err => {\r\n                this.$message.error('服务器出错');\r\n                this.loading=false;\r\n            })\r\n        },\r\n        handleClick(val){\r\n            this.dialogFormVisible = true;\r\n            this.editdata = val;\r\n        },\r\n        deleteClick(uid,index){\r\n            this.$confirm('您确认删除该学生信息了吗?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            }).then(() => {\r\n                this.loading=true;\r\n                this.dialogFormVisible = false;\r\n                \r\n                     this.loading=true;\r\n                    this.delform.id = uid;\r\n                    delStudent(this.delform).then(res=>{\r\n                        if(res==1){\r\n                            this.tableData.splice(index,1);//删除掉tableData数组上的第index个元素\r\n                            this.loading=false;\r\n                            this.$message.success(\"删除成功\");\r\n                        }else{\r\n                            this.loading=false;\r\n                            this.$message.error(\"服务器繁忙,删除失败\");\r\n                        }\r\n                    \r\n                    }).catch(err => {\r\n                        this.$message.error('服务器出错');\r\n                        this.loading=false;\r\n                    })\r\n                 }).catch(() => {\r\n                    this.dialogFormVisible = false;\r\n                    this.loading=false;\r\n                     \r\n                });\r\n        },\r\n        updateData() {\r\n            this.$confirm('您确认修改信息了吗?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            }).then(() => {\r\n                \r\n                this.loading=true;\r\n                this.dialogFormVisible = false;\r\n                this.$refs.edit.validate(valid => {\r\n                    if(valid){\r\n                    updateUser(this.editdata).then(res=>{\r\n                        if(res==1){\r\n                            this.loading=false;\r\n                            this.getUserCount();\r\n                            this.findMsg();\r\n                            this.$message.success(\"修改成功\");\r\n                        }else{\r\n                            this.loading=false;\r\n                            this.$message.success(\"服务器繁忙\");\r\n                        }}).catch(() => {\r\n                            this.dialogFormVisible = false;\r\n                            this.loading=false;\r\n                            this.$message.success(\"服务器出错\");\r\n                    });\r\n                \r\n           \r\n                    }else{\r\n                          this.loading=false;\r\n                          this.findMsg();\r\n                          this.$message.error('请正确填写信息');\r\n                          return false;\r\n                    }\r\n\r\n                })\r\n                 }).catch(() => {\r\n                    this.dialogFormVisible = false;\r\n                    this.loading=false;\r\n                    this.$message.success(\"服务器出错\");\r\n                });\r\n                \r\n          }\r\n    },\r\n        \r\n    created(){\r\n        this.findMsg();\r\n    },\r\n    watch:{\r\n        select(val,oldvalue){\r\n            this.searchform.search = val;\r\n        },\r\n        $route(to,from){\r\n            if(to.path=='/usersinfo'){\r\n                 this.findMsg(); \r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"sourceRoot":"src/components/admin"}]}