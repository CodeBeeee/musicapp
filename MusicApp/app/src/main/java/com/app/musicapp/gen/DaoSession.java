package com.app.musicapp.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.app.musicapp.db.Gedandb;
import com.app.musicapp.db.Musicdb;
import com.app.musicapp.db.MyLoveMusic;
import com.app.musicapp.db.PlayMusic;
import com.app.musicapp.db.Userdb;

import com.app.musicapp.gen.GedandbDao;
import com.app.musicapp.gen.MusicdbDao;
import com.app.musicapp.gen.MyLoveMusicDao;
import com.app.musicapp.gen.PlayMusicDao;
import com.app.musicapp.gen.UserdbDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig gedandbDaoConfig;
    private final DaoConfig musicdbDaoConfig;
    private final DaoConfig myLoveMusicDaoConfig;
    private final DaoConfig playMusicDaoConfig;
    private final DaoConfig userdbDaoConfig;

    private final GedandbDao gedandbDao;
    private final MusicdbDao musicdbDao;
    private final MyLoveMusicDao myLoveMusicDao;
    private final PlayMusicDao playMusicDao;
    private final UserdbDao userdbDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        gedandbDaoConfig = daoConfigMap.get(GedandbDao.class).clone();
        gedandbDaoConfig.initIdentityScope(type);

        musicdbDaoConfig = daoConfigMap.get(MusicdbDao.class).clone();
        musicdbDaoConfig.initIdentityScope(type);

        myLoveMusicDaoConfig = daoConfigMap.get(MyLoveMusicDao.class).clone();
        myLoveMusicDaoConfig.initIdentityScope(type);

        playMusicDaoConfig = daoConfigMap.get(PlayMusicDao.class).clone();
        playMusicDaoConfig.initIdentityScope(type);

        userdbDaoConfig = daoConfigMap.get(UserdbDao.class).clone();
        userdbDaoConfig.initIdentityScope(type);

        gedandbDao = new GedandbDao(gedandbDaoConfig, this);
        musicdbDao = new MusicdbDao(musicdbDaoConfig, this);
        myLoveMusicDao = new MyLoveMusicDao(myLoveMusicDaoConfig, this);
        playMusicDao = new PlayMusicDao(playMusicDaoConfig, this);
        userdbDao = new UserdbDao(userdbDaoConfig, this);

        registerDao(Gedandb.class, gedandbDao);
        registerDao(Musicdb.class, musicdbDao);
        registerDao(MyLoveMusic.class, myLoveMusicDao);
        registerDao(PlayMusic.class, playMusicDao);
        registerDao(Userdb.class, userdbDao);
    }
    
    public void clear() {
        gedandbDaoConfig.clearIdentityScope();
        musicdbDaoConfig.clearIdentityScope();
        myLoveMusicDaoConfig.clearIdentityScope();
        playMusicDaoConfig.clearIdentityScope();
        userdbDaoConfig.clearIdentityScope();
    }

    public GedandbDao getGedandbDao() {
        return gedandbDao;
    }

    public MusicdbDao getMusicdbDao() {
        return musicdbDao;
    }

    public MyLoveMusicDao getMyLoveMusicDao() {
        return myLoveMusicDao;
    }

    public PlayMusicDao getPlayMusicDao() {
        return playMusicDao;
    }

    public UserdbDao getUserdbDao() {
        return userdbDao;
    }

}
